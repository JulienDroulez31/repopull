name: New Project

on:
  push:
  schedule:
    - cron: '0 0 * * 0'  # Exécution une fois par semaine
  workflow_dispatch:     # Exécution manuelle

jobs:
  collect-readmes:
    runs-on: ubuntu-latest

    steps:

        # Lister les repos et récupérer les README
      - name: Collect README.md from repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          
          for repo_name in $repos; do
            echo "Fetching README.md from $repo_name"
            curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/JulienDroulez31/$repo_name/contents/README.md \
              | jq -r '.content' | base64 --decode > README-$repo_name.md
          done


        # Lister les fichiers pour voir si les README.md ont été récupérés
        - name: Lister les fichiers README.md récupérés
          run: ls -l *.md


        # Afficher les fichiers README
        - name: Afficher les fichiers README
          env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            echo "Affichage du fichier README-$repo_name.md"
            cat "README-$repo_name.md"


      # Créer un fichier CSV par repo
      - name: Créer un fichier CSV par repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          for repo_name in $repos; do
            mkdir -p results
            echo "Repository;Owner;Produit" >> results.csv
            echo "" >> results.csv
            echo "$repo_name;Julien;Product2" >> results.csv
            mv "results.csv" "results/"
          done
          cat results/results.csv

      # Lister les fichiers CSV
      - name: Lister le fichier CSV
        run: ls -l results/*.csv

       # Convertir CSV en tableau MD
      - name: Convertir un fichier CSV en tableau MD
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            pip install csv2md

            for csv_file in results/*.csv; do
            csv2md $csv_file
            done
            
        # Upload artifacts
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: results
          retention-days: 90