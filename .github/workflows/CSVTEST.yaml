name: Project

on:
  push:
  schedule:
    - cron: '0 0 * * 0'  # Exécution une fois par semaine
  workflow_dispatch:     # Exécution manuelle

jobs:
  collect-readmes:
    runs-on: ubuntu-latest

    steps:
      # Lister les repos et récupérer les fichiers READMEs
      - name: Collect README.md from repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          
          for repo_name in $repos; do
            echo "Fetching README.md from $repo_name"
            curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/JulienDroulez31/$repo_name/contents/README.md \
              | jq -r '.content' | base64 --decode > README-$repo_name.md
          done

      # Lister les fichiers READMEs
      - name: Lister les fichiers README.md récupérés
        run: ls -l *.md

      # Affichage des fichiers README
      - name: Affichage des fichiers README
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          
          for repo_name in $repos; do
            echo "Affichage du fichier README-$repo_name.md"
            echo ""
            cat "README-$repo_name.md"
            echo ""
          done

      # Récupérer les dates des derniers commits
      - name: Récupérer les dates des derniers commits
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            last_commit_date=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/commits/main" | jq -r '.commit.committer.date')
            echo "Dernier commit de $repo_name : $last_commit_date"
            echo " "
          done

      # Afficher les langages des repos
      - name: Afficher les langages des repos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            $languages=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/languages")
            echo "Langages de $repo_name : $languages"
            echo " "
          done


      # Créer un fichier CSV
      - name: Créer un fichier CSV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Créer le répertoire results s'il n'existe pas
          mkdir -p results

          # Initialiser le fichier CSV avec un en-tête
          echo "Repository;Owner;Produit;Languages;Dernier commit" > results/results.csv

          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          for repo_name in $repos; do
            last_commit_date=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/commits/main" | jq -r '.commit.committer.date')
            
            languages=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/JulienDroulez31/$repo_name/languages)

            # Ajouter les informations du repo au fichier CSV
            echo "$repo_name;Julien;Product2;$languages;$last_commit_date" >> results/results.csv
          done

          # Afficher le contenu du fichier CSV
          cat results/results.csv

      # Lister les fichiers CSV
      - name: Lister le fichier CSV
        run: ls -l results/*.csv

      # Convertir CSV en tableau MD
      - name: Convertir un fichier CSV en tableau MD
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            pip install csv2md

            for csv_file in results/*.csv; do
              csv2md $csv_file
            done

      # Upload artifacts
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: results
          retention-days: 90
