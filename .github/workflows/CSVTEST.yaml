name: Project

on:
  push:
  schedule:
    - cron: '0 0 * * 0'  # Exécution une fois par semaine
  workflow_dispatch:     # Exécution manuelle

jobs:
  collect-readmes:
    runs-on: ubuntu-latest

    steps:
      # Récupérer les repos une seule fois
      - name: Récupérer les repos
        id: repos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh repo list JulienDroulez31 -L 2000 --json name > repos.json

      # Récupérer toutes les infos nécessaires en une seule étape
      - name: Récupérer les infos des dépôts
        id: repo_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(jq -r '.[].name' repos.json)
          for repo_name in $repos; do
            last_commit_date=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/commits/main" | jq -r '.commit.committer.date // "No commit found"')
            
            languages=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/languages" | jq -r 'keys | join(", ")')
            
            owner=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("owner-")) | split("-")[1] // "No owner found"')

            product=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("product-")) | split("-")[1] // "No product found"')

            echo "$repo_name;$owner;$product;$languages;$last_commit_date" >> results/results.csv
          done

      # Créer un fichier CSV
      - name: Créer un fichier CSV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Créer le répertoire results s'il n'existe pas
          mkdir -p results
          
          # Initialiser le fichier CSV avec un en-tête
          echo "Repository;Owner;Produit;Languages;Dernier commit" > results/results.csv
          
          # Ajouter les infos des dépôts au fichier CSV
          cat results/results.csv

      # Compresser les fichiers CSV
      - name: Compresser les résultats
        run: |
          zip -r results.zip results/

      # Upload artifacts compressés
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: results.zip
          retention-days: 90
