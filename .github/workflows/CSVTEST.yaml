name: Project

on:
  push:
  schedule:
    - cron: '0 0 * * 0'  # Exécution une fois par semaine
  workflow_dispatch:     # Exécution manuelle

jobs:
  collect-readmes:
    runs-on: ubuntu-latest

    steps:

      # Récupérer les repos
      - name: Récupérer les repos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          echo "$repos"

      # Récupérer les dates des derniers commits
      - name: Récupérer les dates des derniers commits
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            last_commit_date=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/commits/main" | jq -r '.commit.committer.date')
            echo "Dernier commit de $repo_name : $last_commit_date"
            echo " "
          done

      # Récupérer le langage des repos
      - name: Récupérer le langage des repos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            languages=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/languages" | jq -r 'keys | join(", ")')
            echo "Langages de $repo_name : $languages"
            echo " "
          done

      # Récupérer les owners
      - name: Récupérer les owners
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            owner=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("owner-")) | split("-")[1]')
            echo "Owner de de $repo_name : $owner"
            echo " "
          done

      # Récupérer les products
      - name: Récupérer les products
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        run: |
          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')

          for repo_name in $repos; do
            product=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("product-")) | split("-")[1]')
            echo "Product de $repo_name : $product"
            echo " "
          done


      # Créer un fichier CSV
      - name: Créer un fichier CSV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Créer le répertoire results s'il n'existe pas
          mkdir -p results

          # Initialiser le fichier CSV avec un en-tête
          echo "Repository;Owner;Produit;Languages;Dernier commit" > results/results.csv

          repos=$(gh repo list JulienDroulez31 -L 2000 --json name --jq '.[].name')
          for repo_name in $repos; do
            last_commit_date=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/commits/main" | jq -r '.commit.committer.date')
            
            languages=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/languages" | jq -r 'keys | join(", ")')

            owner=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("owner-")) | split("-")[1]')

            product=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/JulienDroulez31/$repo_name/topics" | jq -r '.names[] | select(startswith("product-")) | split("-")[1]')

            echo "$repo_name;$owner;$product;$languages;$last_commit_date" >> results/results.csv
          done
          cat results/results.csv

      # Upload artifacts
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: results
          retention-days: 90